#
# stage-1 take only a few minutes; they do not run the full test suite or external packages.
#

stages:
  - stage-1
variables:
  GIT_STRATEGY: fetch
  GIT_CLEAN_FLAGS: -ffdxq
  PETSC_OPTIONS: -check_pointer_intensity 0 -error_output_stdout -nox -nox_warning -malloc_dump
  TIMEOUT: 450

#
# The most basic template that most tests will expand upon
#

.test-basic:
  interruptible: true
  only:
    refs:
#     Set with CI/CD Shedules - New Schedule
      - schedules
      - api
#     Set with CI/CD Pipelines - Run Pipeline
      - web
      - merge_requests
  dependencies: []

.test:
  extends: .test-basic
  except:
    variables:
      # Skip if the docs-only label is attached to a merge request
      - $CI_MERGE_REQUEST_LABELS =~ /(^|,)docs-only($|,)/

        #check-ci-settings:
        #  extends: .test-basic
        #  stage: .pre
        #  tags:
        #    - check-ci-settings
        #  script:
        #    - lib/permon/bin/check-ci-settings.sh
#
#  This provides the basic order of operations and options template for cloud based stage 1 tests.
#  Not all test-short need to follow this template but most will.
#

.stage-1:
  extends: .test
  stage: stage-1
  tags:
    - stage1
  before_script:
    - date
    - hostname
    - grep PRETTY_NAME /etc/os-release
    - nproc
    - lscpu
    - ccache --zero-stats
    - echo ${CONFIG_OPTS}
  script:
    - printf "PATH:$PATH\n"
    - printf "PYTHONPATH:$PYTHONPATH\n"
    - printf "PETSC_OPTIONS:$PETSC_OPTIONS\n"
    - if [ ! -z ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME+x} ]; then printf "CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME\n" ;fi
    - git clone -b release https://gitlab.com/petsc/petsc.git petsc
    - export PETSC_DIR="${PWD}/petsc"
    - export PERMON_DIR="${PWD}"
    - export PERMON_ARCH="${TEST_ARCH}"
    - cd $PETSC_DIR
    - python3 ./configure --with-debugging=0 COPTFLAGS='-O3 -march=native' CXXOPTFLAGS='-O3 -march=native' FOPTFLAGS='-O3 -march=native' ${CONFIG_OPTS}
    - make CFLAGS=-Werror CXXFLAGS="-Werror -Wzero-as-null-pointer-constant" FFLAGS=-Werror
    - cd $PERMON_DIR
    - make CFLAGS=-Werror CXXFLAGS="-Werror -Wzero-as-null-pointer-constant" FFLAGS=-Werror
    - make CFLAGS=-Werror CXXFLAGS=-Werror FFLAGS="-Werror -std=f2008" allgtests-tap gmakesearch="${TEST_SEARCH}" TIMEOUT=${TIMEOUT}
  after_script:
    - date
    - ccache --show-stats
  artifacts:
    reports:
      junit: arch-*/tests/testresults.xml
    name: "$CI_JOB_NAME"
    when: always
    paths:
    - arch-*/lib/petsc/conf/*.log
    - arch-*/lib/pkgconfig/PETSc.pc
    - arch-*/tests/testresults.xml
    - arch-*/tests/test_*_tap.log
    - arch-*/tests/test_*_err.log
    expire_in: 4 days

#
# The following tests run on the cloud as part of stage-1.
#

mpich-cxx-py3:
  extends: .stage-1
  tags:
  - stage1, fedora
  variables:
    CONFIG_OPTS: --with-mpi-dir=/home/glci/soft/mpich-3.3.2 --with-clanguage=cxx --with-fc=0
    TEST_SEARCH: tutorials-ex1%
    TEST_ARCH: arch-ci

c99-mlib-static-py2:
  extends: .stage-1
  variables:
    CONFIG_OPTS: --with-mpi-dir=/home/glci/soft/mpich-3.3.2 --with-single-library=0 --with-shared-libraries=0 CFLAGS=-std=c99


      #checksource:
      #  extends: .test
      #  stage: .pre
      #  tags:
      #    - stage1
      #  script:
      #    - python3 ./configure --with-mpi=0 --with-fc=0 --with-cxx=0
      #    - make checkbadSource SHELL=bash
      #    - make -f gmakefile check_output SHELL=bash
      #    - make check_petsc4py_rst

pause-for-approval:
  extends: .test-basic
  stage: .pre
  tags:
    - stage1
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
      - $CI_MERGE_REQUEST_EVENT_TYPE == "detached"
  script:
    - echo "pause-for-approval has no script to run"
  variables:
    GIT_STRATEGY: none
  when: manual
  allow_failure: false

#
#
# The following tests are experimental; more tests by users at other sites may be added below this.  Experimental test
# that fail produce a warning, but do not block execution of a pipeline.
#

.test-experimental:
  extends: .test
  allow_failure: true

